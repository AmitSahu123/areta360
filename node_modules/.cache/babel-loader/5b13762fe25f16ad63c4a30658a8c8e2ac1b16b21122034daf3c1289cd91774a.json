{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amits\\\\Downloads\\\\cursor1\\\\src\\\\components\\\\StyleSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './StyleSelector.module.css';\nimport LoadingScreen from './LoadingScreen';\nimport { processEnhancedVTON, getResultImage } from '../services/enhancedVtonService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst profileImages = [{\n  id: 1,\n  image: '/assets1/g1.jpeg',\n  label: 'Style 1'\n}, {\n  id: 2,\n  image: '/assets1/g2.jpeg',\n  label: 'Style 2'\n}, {\n  id: 3,\n  image: '/assets1/g3.jpeg',\n  label: 'Style 3'\n}, {\n  id: 4,\n  image: '/assets1/g4.jpeg',\n  label: 'Style 4'\n}, {\n  id: 5,\n  image: '/assets1/g5.jpeg',\n  label: 'Style 5'\n}, {\n  id: 6,\n  image: '/assets1/g6.jpeg',\n  label: 'Style 6'\n}, {\n  id: 7,\n  image: '/assets1/g7.jpeg',\n  label: 'Style 7'\n}];\n\n// Define the category options that appear above the bottom toolbar\nconst categories = ['Basic jumpers', 'Warm puffer', 'Bomber', 'Biker jacket'];\n\n// Define the tools that appear in the bottom toolbar\nconst toolbarItems = [{\n  id: 'collar',\n  icon: '/assets1/icons/collar.png',\n  label: 'Collar'\n}, {\n  id: 'styles',\n  icon: '/assets1/icons/styles.png',\n  label: 'Styles'\n}, {\n  id: 'pant',\n  icon: '/assets1/icons/pant.png',\n  label: 'Pant'\n}, {\n  id: 'coat',\n  icon: '/assets1/icons/coat.png',\n  label: 'Coat'\n}, {\n  id: 'accessories',\n  icon: '/assets1/icons/accessories.png',\n  label: 'Accessories'\n}, {\n  id: 'tools',\n  icon: '/assets1/icons/tools.png',\n  label: 'Tools'\n}];\nexport default function StyleSelector() {\n  _s();\n  // Initialize navigation function from React Router\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  // State management using React hooks\n  const [selectedProfile, setSelectedProfile] = useState(0); // Track selected profile image\n  const [selectedCategory, setSelectedCategory] = useState(0); // Track selected category\n  const [isFavorite, setIsFavorite] = useState(false); // Track favorite status\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [uploadedImageFile, setUploadedImageFile] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Handler for close button click\n  const handleClose = () => {\n    navigate(-1); // Go back to previous page\n  };\n\n  // Handler for favorite button click\n  const toggleFavorite = () => {\n    setIsFavorite(!isFavorite); // Toggle favorite status\n  };\n\n  // Handler for profile image selection\n  const handleProfileClick = async index => {\n    setSelectedProfile(index);\n    setIsProcessing(true);\n    setProcessingProgress(0);\n    setError(null); // Reset any previous errors\n\n    try {\n      // Get the garment image\n      const garmentImagePath = profileImages[index].image;\n      const garmentResponse = await fetch(garmentImagePath);\n      if (!garmentResponse.ok) {\n        throw new Error('Failed to load garment image');\n      }\n      const garmentBlob = await garmentResponse.blob();\n      const garmentFile = new File([garmentBlob], `garment_${index}.png`, {\n        type: 'image/png'\n      });\n      console.log('Processing images with VTON service...');\n\n      // Use the uploaded image if available, otherwise use the default man.png\n      let personImageFile;\n      if (uploadedImageFile) {\n        console.log('Using uploaded image for VTON processing');\n        personImageFile = uploadedImageFile;\n      } else {\n        console.log('Using default man.png for VTON processing');\n        const mainImageResponse = await fetch('/assets1/man.png');\n        if (!mainImageResponse.ok) {\n          throw new Error('Failed to load main image');\n        }\n        const mainImageBlob = await mainImageResponse.blob();\n        personImageFile = new File([mainImageBlob], 'man.png', {\n          type: 'image/png'\n        });\n      }\n      try {\n        // Process with VTON service\n        const result = await processEnhancedVTON(personImageFile, garmentFile);\n        console.log('VTON service response:', result);\n        if (result && result.success) {\n          // Navigate to style editor with the result\n          console.log('Navigating to StyleEditor with generated image:', result.result_image);\n          navigate('/style-editor', {\n            state: {\n              generatedImage: result.result_image,\n              garmentImage: garmentImagePath,\n              styleName: `Style ${index + 1}`,\n              category: categories[selectedCategory]\n            }\n          });\n        } else {\n          // If API fails, still navigate with the original images\n          console.warn('VTON service did not return success, using original images');\n          navigate('/style-editor', {\n            state: {\n              generatedImage: uploadedImage || '/assets1/man.png',\n              garmentImage: garmentImagePath,\n              styleName: `Style ${index + 1}`,\n              category: categories[selectedCategory]\n            }\n          });\n        }\n      } catch (apiError) {\n        // If API fails, still navigate with the original images\n        console.warn('VTON service error, using original images:', apiError);\n        navigate('/style-editor', {\n          state: {\n            generatedImage: uploadedImage || '/assets1/man.png',\n            garmentImage: garmentImagePath,\n            styleName: `Style ${index + 1}`,\n            category: categories[selectedCategory]\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in handleProfileClick:', error);\n      setError(error.message || 'An error occurred while processing the images');\n    } finally {\n      setIsProcessing(false);\n      setProcessingProgress(0);\n    }\n  };\n  const startAIProcessing = onComplete => {\n    setIsProcessing(true);\n    setProcessingProgress(0);\n\n    // Simulate AI processing\n    const interval = setInterval(() => {\n      setProcessingProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setIsProcessing(false);\n          onComplete();\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 500);\n  };\n  const handleToolClick = toolIndex => {\n    startAIProcessing(() => {\n      navigate('/style-editor', {\n        state: {\n          selectedProfile: selectedProfile,\n          selectedCategory: selectedCategory,\n          isFavorite: isFavorite,\n          selectedTool: toolIndex\n        }\n      });\n    });\n  };\n  const handleSearch = () => {\n    // Implement search functionality\n  };\n  const handleStyleClick = () => {\n    navigate('/loading'); // Navigate to loading screen first\n  };\n  const handle3DClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setError(null); // Reset any previous errors\n\n    // Validate file type\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!validTypes.includes(file.type)) {\n      setError('Please upload a valid image file (JPEG, JPG, or PNG)');\n      return;\n    }\n\n    // Validate file size (5MB limit)\n    if (file.size > 5 * 1024 * 1024) {\n      setError('File size should be less than 5MB');\n      return;\n    }\n    try {\n      setIsProcessing(true);\n      setProcessingProgress(30);\n\n      // Create a URL for the uploaded file\n      const uploadedImageUrl = URL.createObjectURL(file);\n\n      // Save the uploaded image and file for later use\n      setUploadedImage(uploadedImageUrl);\n      setUploadedImageFile(file);\n      setProcessingProgress(100);\n      setIsProcessing(false);\n\n      // Show success message\n      console.log('Image uploaded successfully:', uploadedImageUrl);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setError('Failed to upload image. Please try again.');\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [isProcessing && /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      progress: processingProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerTopRow,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.closeButton,\n          onClick: handleClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cartButton,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets1/images/shopping-cart.png\",\n            alt: \"Cart\",\n            className: styles.cartIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.headerBottomRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.starContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets1/icons/star.png\",\n            alt: \"Star\",\n            className: styles.starIcon,\n            onError: e => {\n              console.error('Star icon load error:', e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.heartButton,\n          onClick: toggleFavorite,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets1/icons/heart-circle.png\",\n            alt: \"Favorite\",\n            className: styles.heartIcon,\n            onError: e => {\n              console.error('Heart icon load error:', e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainImageContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadedImage || \"/assets1/man.png\",\n        alt: \"Style preview\",\n        className: styles.mainImage,\n        onError: e => {\n          console.error('Image load error:', e);\n          e.target.src = '/assets1/1.png';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        accept: \".jpg,.jpeg,.png\",\n        style: {\n          display: 'none'\n        },\n        \"aria-label\": \"Upload profile image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorMessage,\n        role: \"alert\",\n        \"aria-live\": \"polite\",\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.cameraButton,\n      onClick: handle3DClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets1/icons/3d.png\",\n        alt: \"3D View\",\n        className: styles.cameraIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.profilesContainer,\n      children: profileImages.map((profile, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.profileButton} ${selectedProfile === index ? styles.selectedProfile : ''}`,\n        onClick: () => handleProfileClick(index),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile.image,\n          alt: profile.label,\n          className: styles.profileImage,\n          onError: e => {\n            e.target.src = '/assets1/1.png';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)\n      }, profile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.categoriesContainer,\n      children: [categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.categoryButton} ${selectedCategory === index ? styles.selectedCategory : ''}`,\n        onClick: () => setSelectedCategory(index),\n        children: category\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.searchButton,\n        onClick: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets1/icons/search.png\",\n          alt: \"Search\",\n          className: styles.searchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bottomToolbar,\n      children: toolbarItems.map((tool, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.toolbarButton,\n        onClick: () => handleToolClick(index),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tool.icon,\n          alt: tool.label,\n          className: styles.toolbarIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.toolbarLabel,\n          children: tool.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(StyleSelector, \"01WiWLH4+5kJmLyUwamDrdQ2EXE=\", false, function () {\n  return [useNavigate];\n});\n_c = StyleSelector;\nvar _c;\n$RefreshReg$(_c, \"StyleSelector\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","styles","LoadingScreen","processEnhancedVTON","getResultImage","jsxDEV","_jsxDEV","profileImages","id","image","label","categories","toolbarItems","icon","StyleSelector","_s","navigate","fileInputRef","selectedProfile","setSelectedProfile","selectedCategory","setSelectedCategory","isFavorite","setIsFavorite","isProcessing","setIsProcessing","processingProgress","setProcessingProgress","uploadedImage","setUploadedImage","uploadedImageFile","setUploadedImageFile","uploadError","setUploadError","error","setError","handleClose","toggleFavorite","handleProfileClick","index","garmentImagePath","garmentResponse","fetch","ok","Error","garmentBlob","blob","garmentFile","File","type","console","log","personImageFile","mainImageResponse","mainImageBlob","result","success","result_image","state","generatedImage","garmentImage","styleName","category","warn","apiError","message","startAIProcessing","onComplete","interval","setInterval","prev","clearInterval","handleToolClick","toolIndex","selectedTool","handleSearch","handleStyleClick","handle3DClick","current","click","handleFileChange","event","file","target","files","validTypes","includes","size","uploadedImageUrl","URL","createObjectURL","className","container","children","progress","fileName","_jsxFileName","lineNumber","columnNumber","header","headerTopRow","closeButton","onClick","cartButton","src","alt","cartIcon","headerBottomRow","starContainer","starIcon","onError","e","heartButton","heartIcon","mainImageContainer","mainImage","ref","onChange","accept","style","display","errorMessage","role","cameraButton","cameraIcon","profilesContainer","map","profile","profileButton","profileImage","categoriesContainer","categoryButton","searchButton","searchIcon","bottomToolbar","tool","toolbarButton","toolbarIcon","toolbarLabel","_c","$RefreshReg$"],"sources":["C:/Users/amits/Downloads/cursor1/src/components/StyleSelector.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './StyleSelector.module.css';\nimport LoadingScreen from './LoadingScreen';\nimport { processEnhancedVTON, getResultImage } from '../services/enhancedVtonService';\n\nconst profileImages = [\n  { id: 1, image: '/assets1/g1.jpeg', label: 'Style 1' },\n  { id: 2, image: '/assets1/g2.jpeg', label: 'Style 2' },\n  { id: 3, image: '/assets1/g3.jpeg', label: 'Style 3' },\n  { id: 4, image: '/assets1/g4.jpeg', label: 'Style 4' },\n  { id: 5, image: '/assets1/g5.jpeg', label: 'Style 5' },\n  { id: 6, image: '/assets1/g6.jpeg', label: 'Style 6' },\n  { id: 7, image: '/assets1/g7.jpeg', label: 'Style 7' }\n];\n\n// Define the category options that appear above the bottom toolbar\nconst categories = [\n  'Basic jumpers',\n  'Warm puffer',\n  'Bomber',\n  'Biker jacket'\n];\n\n// Define the tools that appear in the bottom toolbar\nconst toolbarItems = [\n  { id: 'collar', icon: '/assets1/icons/collar.png', label: 'Collar' },\n  { id: 'styles', icon: '/assets1/icons/styles.png', label: 'Styles' },\n  { id: 'pant', icon: '/assets1/icons/pant.png', label: 'Pant' },\n  { id: 'coat', icon: '/assets1/icons/coat.png', label: 'Coat' },\n  { id: 'accessories', icon: '/assets1/icons/accessories.png', label: 'Accessories' },\n  { id: 'tools', icon: '/assets1/icons/tools.png', label: 'Tools' }\n];\n\nexport default function StyleSelector() {\n  // Initialize navigation function from React Router\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  // State management using React hooks\n  const [selectedProfile, setSelectedProfile] = useState(0);  // Track selected profile image\n  const [selectedCategory, setSelectedCategory] = useState(0);  // Track selected category\n  const [isFavorite, setIsFavorite] = useState(false);  // Track favorite status\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [uploadedImageFile, setUploadedImageFile] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Handler for close button click\n  const handleClose = () => {\n    navigate(-1);  // Go back to previous page\n  };\n\n  // Handler for favorite button click\n  const toggleFavorite = () => {\n    setIsFavorite(!isFavorite);  // Toggle favorite status\n  };\n\n  // Handler for profile image selection\n  const handleProfileClick = async (index) => {\n    setSelectedProfile(index);\n    setIsProcessing(true);\n    setProcessingProgress(0);\n    setError(null); // Reset any previous errors\n\n    try {\n      // Get the garment image\n      const garmentImagePath = profileImages[index].image;\n      const garmentResponse = await fetch(garmentImagePath);\n      if (!garmentResponse.ok) {\n        throw new Error('Failed to load garment image');\n      }\n      const garmentBlob = await garmentResponse.blob();\n      const garmentFile = new File([garmentBlob], `garment_${index}.png`, { type: 'image/png' });\n\n      console.log('Processing images with VTON service...');\n      \n      // Use the uploaded image if available, otherwise use the default man.png\n      let personImageFile;\n      if (uploadedImageFile) {\n        console.log('Using uploaded image for VTON processing');\n        personImageFile = uploadedImageFile;\n      } else {\n        console.log('Using default man.png for VTON processing');\n        const mainImageResponse = await fetch('/assets1/man.png');\n        if (!mainImageResponse.ok) {\n          throw new Error('Failed to load main image');\n        }\n        const mainImageBlob = await mainImageResponse.blob();\n        personImageFile = new File([mainImageBlob], 'man.png', { type: 'image/png' });\n      }\n      \n      try {\n        // Process with VTON service\n        const result = await processEnhancedVTON(personImageFile, garmentFile);\n        console.log('VTON service response:', result);\n        \n        if (result && result.success) {\n          // Navigate to style editor with the result\n          console.log('Navigating to StyleEditor with generated image:', result.result_image);\n          navigate('/style-editor', {\n            state: {\n              generatedImage: result.result_image,\n              garmentImage: garmentImagePath,\n              styleName: `Style ${index + 1}`,\n              category: categories[selectedCategory]\n            }\n          });\n        } else {\n          // If API fails, still navigate with the original images\n          console.warn('VTON service did not return success, using original images');\n          navigate('/style-editor', {\n            state: {\n              generatedImage: uploadedImage || '/assets1/man.png',\n              garmentImage: garmentImagePath,\n              styleName: `Style ${index + 1}`,\n              category: categories[selectedCategory]\n            }\n          });\n        }\n      } catch (apiError) {\n        // If API fails, still navigate with the original images\n        console.warn('VTON service error, using original images:', apiError);\n        navigate('/style-editor', {\n          state: {\n            generatedImage: uploadedImage || '/assets1/man.png',\n            garmentImage: garmentImagePath,\n            styleName: `Style ${index + 1}`,\n            category: categories[selectedCategory]\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in handleProfileClick:', error);\n      setError(error.message || 'An error occurred while processing the images');\n    } finally {\n      setIsProcessing(false);\n      setProcessingProgress(0);\n    }\n  };\n\n  const startAIProcessing = (onComplete) => {\n    setIsProcessing(true);\n    setProcessingProgress(0);\n    \n    // Simulate AI processing\n    const interval = setInterval(() => {\n      setProcessingProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setIsProcessing(false);\n          onComplete();\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 500);\n  };\n\n  const handleToolClick = (toolIndex) => {\n    startAIProcessing(() => {\n      navigate('/style-editor', { \n        state: { \n          selectedProfile: selectedProfile,\n          selectedCategory: selectedCategory,\n          isFavorite: isFavorite,\n          selectedTool: toolIndex\n        }\n      });\n    });\n  };\n\n  const handleSearch = () => {\n    // Implement search functionality\n  };\n\n  const handleStyleClick = () => {\n    navigate('/loading'); // Navigate to loading screen first\n  };\n\n  const handle3DClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setError(null); // Reset any previous errors\n\n    // Validate file type\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n    if (!validTypes.includes(file.type)) {\n      setError('Please upload a valid image file (JPEG, JPG, or PNG)');\n      return;\n    }\n\n    // Validate file size (5MB limit)\n    if (file.size > 5 * 1024 * 1024) {\n      setError('File size should be less than 5MB');\n      return;\n    }\n\n    try {\n      setIsProcessing(true);\n      setProcessingProgress(30);\n      \n      // Create a URL for the uploaded file\n      const uploadedImageUrl = URL.createObjectURL(file);\n      \n      // Save the uploaded image and file for later use\n      setUploadedImage(uploadedImageUrl);\n      setUploadedImageFile(file);\n      \n      setProcessingProgress(100);\n      setIsProcessing(false);\n      \n      // Show success message\n      console.log('Image uploaded successfully:', uploadedImageUrl);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setError('Failed to upload image. Please try again.');\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {isProcessing && <LoadingScreen progress={processingProgress} />}\n      \n      {/* Status Bar */}\n  \n\n      {/* Header */}\n      <div className={styles.header}>\n        <div className={styles.headerTopRow}>\n          <button className={styles.closeButton} onClick={handleClose}>✕</button>\n          <button className={styles.cartButton}>\n            <img \n              src=\"/assets1/images/shopping-cart.png\" \n              alt=\"Cart\"\n              className={styles.cartIcon}\n            />\n          </button>\n        </div>\n        <div className={styles.headerBottomRow}>\n          <div className={styles.starContainer}>\n            <img \n              src=\"/assets1/icons/star.png\" \n              alt=\"Star\"\n              className={styles.starIcon}\n              onError={(e) => {\n                console.error('Star icon load error:', e);\n              }}\n            />\n          </div>\n          <button className={styles.heartButton} onClick={toggleFavorite}>\n            <img \n              src=\"/assets1/icons/heart-circle.png\"\n              alt=\"Favorite\"\n              className={styles.heartIcon}\n              onError={(e) => {\n                console.error('Heart icon load error:', e);\n              }}\n            />\n          </button>\n        </div>\n      </div>\n\n      {/* Main Image */}\n      <div className={styles.mainImageContainer}>\n        <img\n          src={uploadedImage || \"/assets1/man.png\"}\n          alt=\"Style preview\"\n          className={styles.mainImage}\n          onError={(e) => {\n            console.error('Image load error:', e);\n            e.target.src = '/assets1/1.png';\n          }}\n        />\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n          accept=\".jpg,.jpeg,.png\"\n          style={{ display: 'none' }}\n          aria-label=\"Upload profile image\"\n        />\n        {uploadError && (\n          <div \n            className={styles.errorMessage}\n            role=\"alert\"\n            aria-live=\"polite\"\n          >\n            {uploadError}\n          </div>\n        )}\n      </div>\n\n      {/* 3D View Button */}\n      <button className={styles.cameraButton} onClick={handle3DClick}>\n        <img \n          src=\"/assets1/icons/3d.png\" \n          alt=\"3D View\"\n          className={styles.cameraIcon}\n        />\n      </button>\n\n      {/* Profile Circles */}\n      <div className={styles.profilesContainer}>\n        {profileImages.map((profile, index) => (\n          <button \n            key={profile.id}\n            className={`${styles.profileButton} ${selectedProfile === index ? styles.selectedProfile : ''}`}\n            onClick={() => handleProfileClick(index)}\n          >\n            <img\n              src={profile.image} \n              alt={profile.label}\n              className={styles.profileImage}\n              onError={(e) => {\n                e.target.src = '/assets1/1.png';\n              }}\n            />\n          </button>\n        ))}\n      </div>\n\n      {/* Categories */}\n      <div className={styles.categoriesContainer}>\n        {categories.map((category, index) => (\n          <button \n            key={index}\n            className={`${styles.categoryButton} ${selectedCategory === index ? styles.selectedCategory : ''}`}\n            onClick={() => setSelectedCategory(index)}\n          >\n            {category}\n          </button>\n        ))}\n        <button \n          className={styles.searchButton}\n          onClick={handleSearch}\n        >\n          <img \n            src=\"/assets1/icons/search.png\" \n            alt=\"Search\" \n            className={styles.searchIcon}\n          />\n        </button>\n      </div>\n\n      {/* Bottom Toolbar */}\n      <div className={styles.bottomToolbar}>\n        {toolbarItems.map((tool, index) => (\n          <button \n            key={index} \n            className={styles.toolbarButton}\n            onClick={() => handleToolClick(index)}\n          >\n            <img \n              src={tool.icon} \n              alt={tool.label}\n              className={styles.toolbarIcon}\n            />\n            <span className={styles.toolbarLabel}>{tool.label}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}