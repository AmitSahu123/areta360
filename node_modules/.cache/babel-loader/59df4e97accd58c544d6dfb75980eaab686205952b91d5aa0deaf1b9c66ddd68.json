{"ast":null,"code":"// Enhanced VTON Service for realistic garment fitting\n\n/**\n * Converts a File or Blob to base64\n */\nconst fileToBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n};\n\n/**\n * Safely load an image from a File object\n */\nconst loadImageFromFile = file => {\n  return new Promise((resolve, reject) => {\n    try {\n      // Create a new image object\n      const img = new Image();\n\n      // Set up event handlers\n      img.onload = () => resolve(img);\n      img.onerror = err => {\n        console.error('Error loading image:', err);\n        reject(new Error('Failed to load image'));\n      };\n\n      // Set crossOrigin to anonymous to avoid CORS issues\n      img.crossOrigin = 'anonymous';\n\n      // Create object URL and set as source\n      const objectUrl = URL.createObjectURL(file);\n      img.src = objectUrl;\n\n      // Clean up the object URL after the image loads or errors\n      img.onload = () => {\n        URL.revokeObjectURL(objectUrl);\n        resolve(img);\n      };\n      img.onerror = err => {\n        URL.revokeObjectURL(objectUrl);\n        console.error('Error loading image:', err);\n        reject(new Error('Failed to load image'));\n      };\n    } catch (error) {\n      console.error('Error in loadImageFromFile:', error);\n      reject(error);\n    }\n  });\n};\n\n/**\n * Creates a realistic fitted garment effect by combining person and garment images\n */\nexport const processEnhancedVTON = async (personImage, garmentImage) => {\n  try {\n    console.log('Using enhanced VTON implementation');\n\n    // Create a canvas to combine the person and garment images\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas dimensions\n    canvas.width = 512;\n    canvas.height = 768;\n\n    // Load the person image\n    let personImg;\n    try {\n      personImg = await loadImageFromFile(personImage);\n      console.log('Person image loaded successfully');\n    } catch (error) {\n      console.error('Failed to load person image:', error);\n      throw new Error('Failed to load person image');\n    }\n\n    // Draw the person image on the canvas\n    ctx.drawImage(personImg, 0, 0, canvas.width, canvas.height);\n\n    // Load the garment image\n    let garmentImg;\n    try {\n      garmentImg = await loadImageFromFile(garmentImage);\n      console.log('Garment image loaded successfully');\n    } catch (error) {\n      console.error('Failed to load garment image:', error);\n      throw new Error('Failed to load garment image');\n    }\n\n    // Create a mask for the garment to follow the person's body shape\n    const maskCanvas = document.createElement('canvas');\n    const maskCtx = maskCanvas.getContext('2d');\n    maskCanvas.width = canvas.width;\n    maskCanvas.height = canvas.height;\n\n    // Draw a more detailed body shape mask\n    maskCtx.fillStyle = 'white';\n    maskCtx.beginPath();\n\n    // Left shoulder\n    maskCtx.moveTo(canvas.width * 0.3, canvas.height * 0.15);\n\n    // Left shoulder curve\n    maskCtx.bezierCurveTo(canvas.width * 0.25, canvas.height * 0.18, canvas.width * 0.22, canvas.height * 0.22, canvas.width * 0.2, canvas.height * 0.25);\n\n    // Left side\n    maskCtx.lineTo(canvas.width * 0.2, canvas.height * 0.6);\n\n    // Left hip curve\n    maskCtx.bezierCurveTo(canvas.width * 0.2, canvas.height * 0.65, canvas.width * 0.25, canvas.height * 0.7, canvas.width * 0.3, canvas.height * 0.7);\n\n    // Bottom\n    maskCtx.lineTo(canvas.width * 0.7, canvas.height * 0.7);\n\n    // Right hip curve\n    maskCtx.bezierCurveTo(canvas.width * 0.75, canvas.height * 0.7, canvas.width * 0.8, canvas.height * 0.65, canvas.width * 0.8, canvas.height * 0.6);\n\n    // Right side\n    maskCtx.lineTo(canvas.width * 0.8, canvas.height * 0.25);\n\n    // Right shoulder curve\n    maskCtx.bezierCurveTo(canvas.width * 0.78, canvas.height * 0.22, canvas.width * 0.75, canvas.height * 0.18, canvas.width * 0.7, canvas.height * 0.15);\n    maskCtx.closePath();\n    maskCtx.fill();\n\n    // Add a subtle inner shadow to the mask for depth\n    maskCtx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n    maskCtx.shadowBlur = 10;\n    maskCtx.shadowOffsetX = 5;\n    maskCtx.shadowOffsetY = 5;\n    maskCtx.fill();\n\n    // Reset shadow\n    maskCtx.shadowColor = 'transparent';\n    maskCtx.shadowBlur = 0;\n    maskCtx.shadowOffsetX = 0;\n    maskCtx.shadowOffsetY = 0;\n\n    // Calculate the position and size for the garment\n    const garmentWidth = canvas.width * 0.8; // Slightly smaller than canvas width\n    const garmentHeight = canvas.height * 0.45; // Cover upper body\n    const garmentX = (canvas.width - garmentWidth) / 2; // Center horizontally\n    const garmentY = canvas.height * 0.15; // Position from top\n\n    // Apply the mask to the garment\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(maskCanvas, 0, 0);\n    ctx.globalCompositeOperation = 'source-over';\n\n    // Draw the garment image with proper positioning and sizing\n    ctx.drawImage(garmentImg, garmentX, garmentY, garmentWidth, garmentHeight);\n\n    // Add fabric texture effect\n    const textureCanvas = document.createElement('canvas');\n    const textureCtx = textureCanvas.getContext('2d');\n    textureCanvas.width = canvas.width;\n    textureCanvas.height = canvas.height;\n\n    // Create a subtle noise texture\n    for (let i = 0; i < textureCanvas.width; i += 2) {\n      for (let j = 0; j < textureCanvas.height; j += 2) {\n        const noise = Math.random() * 10 - 5;\n        textureCtx.fillStyle = `rgba(255, 255, 255, ${noise / 100})`;\n        textureCtx.fillRect(i, j, 2, 2);\n      }\n    }\n\n    // Apply the texture with overlay blend mode\n    ctx.globalCompositeOperation = 'overlay';\n    ctx.globalAlpha = 0.1;\n    ctx.drawImage(textureCanvas, 0, 0);\n    ctx.globalAlpha = 1.0;\n\n    // Add shading to make it look more realistic\n    const gradient = ctx.createLinearGradient(0, garmentY, 0, garmentY + garmentHeight);\n    gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0.1)');\n    gradient.addColorStop(1, 'rgba(0, 0, 0, 0.2)');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, garmentY, canvas.width, garmentHeight);\n\n    // Add highlights\n    ctx.globalCompositeOperation = 'overlay';\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.fillRect(0, garmentY, canvas.width, garmentHeight * 0.3);\n\n    // Add fabric folds effect\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n\n    // Draw some curved lines to simulate fabric folds\n    for (let i = 0; i < 5; i++) {\n      const foldX = garmentX + garmentWidth / 5 * i;\n      const foldWidth = garmentWidth / 10;\n      ctx.beginPath();\n      ctx.moveTo(foldX, garmentY);\n      ctx.bezierCurveTo(foldX + foldWidth, garmentY + garmentHeight * 0.3, foldX - foldWidth, garmentY + garmentHeight * 0.6, foldX, garmentY + garmentHeight);\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    }\n\n    // Reset composite operation\n    ctx.globalCompositeOperation = 'source-over';\n\n    // Convert the canvas to a blob\n    const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png', 1.0));\n\n    // Create a URL for the image\n    const imageUrl = URL.createObjectURL(blob);\n    console.log('Generated enhanced VTON image:', imageUrl);\n\n    // Ensure the blob URL is valid\n    if (!imageUrl || !imageUrl.startsWith('blob:')) {\n      console.error('Failed to create valid blob URL');\n      throw new Error('Failed to create valid blob URL');\n    }\n    return {\n      success: true,\n      result_image: imageUrl\n    };\n  } catch (error) {\n    console.error('Error in enhanced VTON processing:', error);\n    throw error;\n  }\n};\n\n/**\n * Gets the URL for a result image\n */\nexport const getResultImage = filename => {\n  // If filename is already a URL, return it\n  if (filename.startsWith('http') || filename.startsWith('blob:')) {\n    return filename;\n  }\n  return `/static/results/${filename}`;\n};","map":{"version":3,"names":["fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","loadImageFromFile","img","Image","err","console","Error","crossOrigin","objectUrl","URL","createObjectURL","src","revokeObjectURL","processEnhancedVTON","personImage","garmentImage","log","canvas","document","createElement","ctx","getContext","width","height","personImg","drawImage","garmentImg","maskCanvas","maskCtx","fillStyle","beginPath","moveTo","bezierCurveTo","lineTo","closePath","fill","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","garmentWidth","garmentHeight","garmentX","garmentY","globalCompositeOperation","textureCanvas","textureCtx","i","j","noise","Math","random","fillRect","globalAlpha","gradient","createLinearGradient","addColorStop","foldX","foldWidth","lineWidth","stroke","blob","toBlob","imageUrl","startsWith","success","result_image","getResultImage","filename"],"sources":["C:/Users/amits/Downloads/cursor1/src/services/enhancedVtonService.js"],"sourcesContent":["// Enhanced VTON Service for realistic garment fitting\n\n/**\n * Converts a File or Blob to base64\n */\nconst fileToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n};\n\n/**\n * Safely load an image from a File object\n */\nconst loadImageFromFile = (file) => {\n  return new Promise((resolve, reject) => {\n    try {\n      // Create a new image object\n      const img = new Image();\n      \n      // Set up event handlers\n      img.onload = () => resolve(img);\n      img.onerror = (err) => {\n        console.error('Error loading image:', err);\n        reject(new Error('Failed to load image'));\n      };\n      \n      // Set crossOrigin to anonymous to avoid CORS issues\n      img.crossOrigin = 'anonymous';\n      \n      // Create object URL and set as source\n      const objectUrl = URL.createObjectURL(file);\n      img.src = objectUrl;\n      \n      // Clean up the object URL after the image loads or errors\n      img.onload = () => {\n        URL.revokeObjectURL(objectUrl);\n        resolve(img);\n      };\n      \n      img.onerror = (err) => {\n        URL.revokeObjectURL(objectUrl);\n        console.error('Error loading image:', err);\n        reject(new Error('Failed to load image'));\n      };\n    } catch (error) {\n      console.error('Error in loadImageFromFile:', error);\n      reject(error);\n    }\n  });\n};\n\n/**\n * Creates a realistic fitted garment effect by combining person and garment images\n */\nexport const processEnhancedVTON = async (personImage, garmentImage) => {\n  try {\n    console.log('Using enhanced VTON implementation');\n    \n    // Create a canvas to combine the person and garment images\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas dimensions\n    canvas.width = 512;\n    canvas.height = 768;\n    \n    // Load the person image\n    let personImg;\n    try {\n      personImg = await loadImageFromFile(personImage);\n      console.log('Person image loaded successfully');\n    } catch (error) {\n      console.error('Failed to load person image:', error);\n      throw new Error('Failed to load person image');\n    }\n    \n    // Draw the person image on the canvas\n    ctx.drawImage(personImg, 0, 0, canvas.width, canvas.height);\n    \n    // Load the garment image\n    let garmentImg;\n    try {\n      garmentImg = await loadImageFromFile(garmentImage);\n      console.log('Garment image loaded successfully');\n    } catch (error) {\n      console.error('Failed to load garment image:', error);\n      throw new Error('Failed to load garment image');\n    }\n    \n    // Create a mask for the garment to follow the person's body shape\n    const maskCanvas = document.createElement('canvas');\n    const maskCtx = maskCanvas.getContext('2d');\n    maskCanvas.width = canvas.width;\n    maskCanvas.height = canvas.height;\n    \n    // Draw a more detailed body shape mask\n    maskCtx.fillStyle = 'white';\n    maskCtx.beginPath();\n    \n    // Left shoulder\n    maskCtx.moveTo(canvas.width * 0.3, canvas.height * 0.15);\n    \n    // Left shoulder curve\n    maskCtx.bezierCurveTo(\n      canvas.width * 0.25, canvas.height * 0.18,\n      canvas.width * 0.22, canvas.height * 0.22,\n      canvas.width * 0.2, canvas.height * 0.25\n    );\n    \n    // Left side\n    maskCtx.lineTo(canvas.width * 0.2, canvas.height * 0.6);\n    \n    // Left hip curve\n    maskCtx.bezierCurveTo(\n      canvas.width * 0.2, canvas.height * 0.65,\n      canvas.width * 0.25, canvas.height * 0.7,\n      canvas.width * 0.3, canvas.height * 0.7\n    );\n    \n    // Bottom\n    maskCtx.lineTo(canvas.width * 0.7, canvas.height * 0.7);\n    \n    // Right hip curve\n    maskCtx.bezierCurveTo(\n      canvas.width * 0.75, canvas.height * 0.7,\n      canvas.width * 0.8, canvas.height * 0.65,\n      canvas.width * 0.8, canvas.height * 0.6\n    );\n    \n    // Right side\n    maskCtx.lineTo(canvas.width * 0.8, canvas.height * 0.25);\n    \n    // Right shoulder curve\n    maskCtx.bezierCurveTo(\n      canvas.width * 0.78, canvas.height * 0.22,\n      canvas.width * 0.75, canvas.height * 0.18,\n      canvas.width * 0.7, canvas.height * 0.15\n    );\n    \n    maskCtx.closePath();\n    maskCtx.fill();\n    \n    // Add a subtle inner shadow to the mask for depth\n    maskCtx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n    maskCtx.shadowBlur = 10;\n    maskCtx.shadowOffsetX = 5;\n    maskCtx.shadowOffsetY = 5;\n    maskCtx.fill();\n    \n    // Reset shadow\n    maskCtx.shadowColor = 'transparent';\n    maskCtx.shadowBlur = 0;\n    maskCtx.shadowOffsetX = 0;\n    maskCtx.shadowOffsetY = 0;\n    \n    // Calculate the position and size for the garment\n    const garmentWidth = canvas.width * 0.8; // Slightly smaller than canvas width\n    const garmentHeight = canvas.height * 0.45; // Cover upper body\n    const garmentX = (canvas.width - garmentWidth) / 2; // Center horizontally\n    const garmentY = canvas.height * 0.15; // Position from top\n    \n    // Apply the mask to the garment\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(maskCanvas, 0, 0);\n    ctx.globalCompositeOperation = 'source-over';\n    \n    // Draw the garment image with proper positioning and sizing\n    ctx.drawImage(garmentImg, garmentX, garmentY, garmentWidth, garmentHeight);\n    \n    // Add fabric texture effect\n    const textureCanvas = document.createElement('canvas');\n    const textureCtx = textureCanvas.getContext('2d');\n    textureCanvas.width = canvas.width;\n    textureCanvas.height = canvas.height;\n    \n    // Create a subtle noise texture\n    for (let i = 0; i < textureCanvas.width; i += 2) {\n      for (let j = 0; j < textureCanvas.height; j += 2) {\n        const noise = Math.random() * 10 - 5;\n        textureCtx.fillStyle = `rgba(255, 255, 255, ${noise / 100})`;\n        textureCtx.fillRect(i, j, 2, 2);\n      }\n    }\n    \n    // Apply the texture with overlay blend mode\n    ctx.globalCompositeOperation = 'overlay';\n    ctx.globalAlpha = 0.1;\n    ctx.drawImage(textureCanvas, 0, 0);\n    ctx.globalAlpha = 1.0;\n    \n    // Add shading to make it look more realistic\n    const gradient = ctx.createLinearGradient(0, garmentY, 0, garmentY + garmentHeight);\n    gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0.1)');\n    gradient.addColorStop(1, 'rgba(0, 0, 0, 0.2)');\n    \n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, garmentY, canvas.width, garmentHeight);\n    \n    // Add highlights\n    ctx.globalCompositeOperation = 'overlay';\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.fillRect(0, garmentY, canvas.width, garmentHeight * 0.3);\n    \n    // Add fabric folds effect\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n    \n    // Draw some curved lines to simulate fabric folds\n    for (let i = 0; i < 5; i++) {\n      const foldX = garmentX + (garmentWidth / 5) * i;\n      const foldWidth = garmentWidth / 10;\n      \n      ctx.beginPath();\n      ctx.moveTo(foldX, garmentY);\n      ctx.bezierCurveTo(\n        foldX + foldWidth, garmentY + garmentHeight * 0.3,\n        foldX - foldWidth, garmentY + garmentHeight * 0.6,\n        foldX, garmentY + garmentHeight\n      );\n      ctx.lineWidth = 2;\n      ctx.stroke();\n    }\n    \n    // Reset composite operation\n    ctx.globalCompositeOperation = 'source-over';\n    \n    // Convert the canvas to a blob\n    const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/png', 1.0));\n    \n    // Create a URL for the image\n    const imageUrl = URL.createObjectURL(blob);\n    \n    console.log('Generated enhanced VTON image:', imageUrl);\n    \n    // Ensure the blob URL is valid\n    if (!imageUrl || !imageUrl.startsWith('blob:')) {\n      console.error('Failed to create valid blob URL');\n      throw new Error('Failed to create valid blob URL');\n    }\n    \n    return {\n      success: true,\n      result_image: imageUrl\n    };\n  } catch (error) {\n    console.error('Error in enhanced VTON processing:', error);\n    throw error;\n  }\n};\n\n/**\n * Gets the URL for a result image\n */\nexport const getResultImage = (filename) => {\n  // If filename is already a URL, return it\n  if (filename.startsWith('http') || filename.startsWith('blob:')) {\n    return filename;\n  }\n  return `/static/results/${filename}`;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}