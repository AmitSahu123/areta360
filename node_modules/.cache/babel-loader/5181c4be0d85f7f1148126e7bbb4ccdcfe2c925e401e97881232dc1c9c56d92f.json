{"ast":null,"code":"/**\r\n * Direct VTON Service\r\n * This service makes a direct request to the backend API for VTON processing.\r\n */\n\n/**\r\n * Process VTON request with person and garment images\r\n * @param {File} personImage - The person image file\r\n * @param {File} garmentImage - The garment image file\r\n * @returns {Promise<Object>} - The VTON response with the generated image\r\n */\nexport const processDirectVTON = async (personImage, garmentImage) => {\n  try {\n    console.log('Starting direct VTON processing...');\n    console.log('Person image:', personImage === null || personImage === void 0 ? void 0 : personImage.name);\n    console.log('Garment image:', garmentImage === null || garmentImage === void 0 ? void 0 : garmentImage.name);\n\n    // Validate input\n    if (!personImage || !garmentImage) {\n      throw new Error('Both person and garment images are required');\n    }\n\n    // Create FormData for the backend API\n    const formData = new FormData();\n    formData.append('person_image', personImage);\n    formData.append('garment_image', garmentImage);\n    console.log('Sending request to backend API...');\n\n    // Make API call to our backend using the new direct endpoint\n    const response = await fetch('http://localhost:5000/api/vton/process-direct', {\n      method: 'POST',\n      body: formData\n    });\n\n    // Log the response status for debugging\n    console.log('API Response Status:', response.status);\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Error Response:', errorText);\n      throw new Error(`API request failed with status ${response.status}: ${errorText}`);\n    }\n    const result = await response.json();\n    console.log('API response received:', result);\n    if (!result || !result.success) {\n      console.error('Invalid API response:', result);\n      throw new Error('Failed to process images with VTON service');\n    }\n\n    // Return the result image URL\n    return {\n      success: true,\n      result_image: result.result_image\n    };\n  } catch (error) {\n    console.error('Error in processDirectVTON:', error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["processDirectVTON","personImage","garmentImage","console","log","name","Error","formData","FormData","append","response","fetch","method","body","status","ok","errorText","text","error","result","json","success","result_image","message"],"sources":["C:/Users/amits/Downloads/cursor1/src/services/directVtonService.js"],"sourcesContent":["/**\r\n * Direct VTON Service\r\n * This service makes a direct request to the backend API for VTON processing.\r\n */\r\n\r\n/**\r\n * Process VTON request with person and garment images\r\n * @param {File} personImage - The person image file\r\n * @param {File} garmentImage - The garment image file\r\n * @returns {Promise<Object>} - The VTON response with the generated image\r\n */\r\nexport const processDirectVTON = async (personImage, garmentImage) => {\r\n  try {\r\n    console.log('Starting direct VTON processing...');\r\n    console.log('Person image:', personImage?.name);\r\n    console.log('Garment image:', garmentImage?.name);\r\n    \r\n    // Validate input\r\n    if (!personImage || !garmentImage) {\r\n      throw new Error('Both person and garment images are required');\r\n    }\r\n    \r\n    // Create FormData for the backend API\r\n    const formData = new FormData();\r\n    formData.append('person_image', personImage);\r\n    formData.append('garment_image', garmentImage);\r\n    \r\n    console.log('Sending request to backend API...');\r\n    \r\n    // Make API call to our backend using the new direct endpoint\r\n    const response = await fetch('http://localhost:5000/api/vton/process-direct', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    \r\n    // Log the response status for debugging\r\n    console.log('API Response Status:', response.status);\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      console.error('API Error Response:', errorText);\r\n      throw new Error(`API request failed with status ${response.status}: ${errorText}`);\r\n    }\r\n    \r\n    const result = await response.json();\r\n    console.log('API response received:', result);\r\n    \r\n    if (!result || !result.success) {\r\n      console.error('Invalid API response:', result);\r\n      throw new Error('Failed to process images with VTON service');\r\n    }\r\n    \r\n    // Return the result image URL\r\n    return {\r\n      success: true,\r\n      result_image: result.result_image\r\n    };\r\n  } catch (error) {\r\n    console.error('Error in processDirectVTON:', error);\r\n    return {\r\n      success: false,\r\n      error: error.message\r\n    };\r\n  }\r\n}; "],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,YAAY,KAAK;EACpE,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,IAAI,CAAC;IAC/CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,IAAI,CAAC;;IAEjD;IACA,IAAI,CAACJ,WAAW,IAAI,CAACC,YAAY,EAAE;MACjC,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;IAChE;;IAEA;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAER,WAAW,CAAC;IAC5CM,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEP,YAAY,CAAC;IAE9CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;;IAEhD;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;MAC5EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;;IAEF;IACAJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,QAAQ,CAACI,MAAM,CAAC;IAEpD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACvCd,OAAO,CAACe,KAAK,CAAC,qBAAqB,EAAEF,SAAS,CAAC;MAC/C,MAAM,IAAIV,KAAK,CAAC,kCAAkCI,QAAQ,CAACI,MAAM,KAAKE,SAAS,EAAE,CAAC;IACpF;IAEA,MAAMG,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACpCjB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEe,MAAM,CAAC;IAE7C,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACE,OAAO,EAAE;MAC9BlB,OAAO,CAACe,KAAK,CAAC,uBAAuB,EAAEC,MAAM,CAAC;MAC9C,MAAM,IAAIb,KAAK,CAAC,4CAA4C,CAAC;IAC/D;;IAEA;IACA,OAAO;MACLe,OAAO,EAAE,IAAI;MACbC,YAAY,EAAEH,MAAM,CAACG;IACvB,CAAC;EACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdf,OAAO,CAACe,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO;MACLG,OAAO,EAAE,KAAK;MACdH,KAAK,EAAEA,KAAK,CAACK;IACf,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}